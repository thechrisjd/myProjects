************************************  HOW TO WORK WITH LARAVEL   ************************************************************************


* Install "composer php package manager"

* run: composer    in the terminal
     *if nothing happens then composer is not in the path

* install node js

**** TO INSTALL LARAVEL run: "composer global require laravel/installer"

* To create a new laravel project run: "laravel new ProjectName"

* As of laravel 6 you need to intall ui to create auths. cd into project and run: "composer require laravel/ui --dev"

* To change the frontend frame work. run: "php artisan ui react"

* To create the auth routes and views run: "php artisan ui react --auth"

* Now laravel is ready to install react run: "npm install && npm run dev"

* Now you are ready
********************************************SOME FILES ***********************************************************************************

* The composer.json file is like the package.json file. It tells the projects assests and dependices.

* To see the project go to "./resources/views". This file contains the html that will be render.

* Laravel uses blades which are html and php snippets mixed together.


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************** WORKING WITH ARTISAN ************************************************************************
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

* To see all artisan commands run: "php artisan"

********artisan root commands **********
* clear-compiled       Remove the compiled class file

* down                 Put the application into maintenance mode

* env                  Display the current framework environment

* help                 Displays help for a command

* inspire              Display an inspiring quote

* list                 Lists commands

* migrate              Run the database migrations

* optimize             Cache the framework bootstrap files

* preset               Swap the front-end scaffolding for the application

* serve                Serve the application on the PHP development server

* tinker               Interact with your application

* up                   Bring the application out of maintenance mode

///////////////////////////////////////////////
* To run a command type php artisan COMMAND-NAME

///////////////////////////////////////////////
* To make auth blades and routes run "php artisan ui:auth"


////////////////////////////////////////////////
* fill in this information for your mysql information in the .env file:
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=
//////////////////////////////////////////////////
* To use sqlite do the following

* vim database/database.sqlite

* press Esc :wq enter.

* in the .env file delete the DB_ info and tpye DB_CONNECTION=sqlite

* php artisan migrate

* Restart dev server and then signup and login

*** ANY TIME YOU MAKE CHANGES TO THE .ENV FILE YOU NEED TO RESTART THE SERVER  ***


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************** WORKING WITH LARAVEL ************************************************************************
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


* Any time you change the sass file or chnage components you need to re-complie the js code

* type: npm run dev to do this.

* If you want to add a new input field to the reg form do the following:

        * In the views/register.blade.php add the new inputs field

        * In the app folder the controller and Users file exists

        * In the app/Http/Controllers/Auth/RegisterController.php

        * Add the name of the new input into this file

        * In the app/User.php add the name of the new input into this file.

        * Carry out a new migartion

        * Try out the signup form

        * In the terminal use the following command to interact with the project

                * php artisan tinker

                * tinker lets us run php commands

                    * one such command is the: "User::all()"

                    * this will show all the users in the database

                    * use: exit to exit


          ///////////////////   MAKING A NEW CONTROLLER   //////////////////////////
* In the terminal run the command: "php artisan make:controller [ControllerName]"

*This will make a new controller in the app/http/controllers folder
